<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [Project\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image Project\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Jul 30 13:51:34 2020
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; NVIC_SetPriority
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC_IRQHandler</a> from cx32l003_it.o(i.ADC_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1b]">AWK_IRQHandler</a> from cx32l003_it.o(i.AWK_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1e]">CLKTRIM_IRQHandler</a> from cx32l003_it.o(i.CLKTRIM_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[a]">FLASH_IRQHandler</a> from cx32l003_it.o(i.FLASH_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[6]">GPIOA_IRQHandler</a> from cx32l003_it.o(i.GPIOA_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[7]">GPIOB_IRQHandler</a> from cx32l003_it.o(i.GPIOB_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[8]">GPIOC_IRQHandler</a> from cx32l003_it.o(i.GPIOC_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[9]">GPIOD_IRQHandler</a> from cx32l003_it.o(i.GPIOD_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from cx32l003_it.o(i.HardFault_Handler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[f]">I2C_IRQHandler</a> from cx32l003_it.o(i.I2C_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[17]">IWDG_IRQHandler</a> from cx32l003_it.o(i.IWDG_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[12]">LPTIM_IRQHandler</a> from cx32l003_it.o(i.LPTIM_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[d]">LPUART_IRQHandler</a> from cx32l003_it.o(i.LPUART_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[19]">LVD_IRQHandler</a> from cx32l003_it.o(i.LVD_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from cx32l003_it.o(i.NMI_Handler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1c]">OWIRE_IRQHandler</a> from cx32l003_it.o(i.OWIRE_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[15]">PCA_IRQHandler</a> from cx32l003_it.o(i.PCA_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from cx32l003_it.o(i.PendSV_Handler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1d]">RTC_IRQHandler</a> from cx32l003_it.o(i.RTC_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cx32l003.o(.text) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[e]">SPI_IRQHandler</a> from cx32l003_it.o(i.SPI_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from cx32l003_it.o(i.SVC_Handler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from cx32l003_it.o(i.SysTick_Handler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_cx32l003.o(i.SystemInit) referenced from startup_cx32l003.o(.text)
 <LI><a href="#[10]">TIM10_IRQHandler</a> from cx32l003_it.o(i.TIM10_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[11]">TIM11_IRQHandler</a> from cx32l003_it.o(i.TIM11_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[13]">TIM1_IRQHandler</a> from cx32l003_it.o(i.TIM1_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[14]">TIM2_IRQHandler</a> from cx32l003_it.o(i.TIM2_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[b]">UART0_IRQHandler</a> from cx32l003_it.o(i.UART0_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[c]">UART1_IRQHandler</a> from cx32l003_it.o(i.UART1_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[1a]">VC_IRQHandler</a> from cx32l003_it.o(i.VC_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[16]">WWDG_IRQHandler</a> from cx32l003_it.o(i.WWDG_IRQHandler) referenced from startup_cx32l003.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cx32l003.o(.text)
 <LI><a href="#[22]">fputc</a> from log.o(i.fputc) referenced from printf2.o(i.__0printf$2)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[23]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[54]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[55]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[56]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[57]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[58]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cx32l003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLKFreq
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Delay
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_UART_SetConfig
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_MspInit
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[24]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[18]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.ADC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>AWK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.AWK_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CLKTRIM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.CLKTRIM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a]"></a>FLASH_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.FLASH_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>GPIOA_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.GPIOA_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>GPIOB_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.GPIOB_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>GPIOC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.GPIOC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>GPIOD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.GPIOD_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>HAL_GPIO_Init</STRONG> (Thumb, 636 bytes, Stack size 24 bytes, cx32l003_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialInit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_MspInit
</UL>

<P><STRONG><a name="[40]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[4c]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cx32l003_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[29]"></a>HAL_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cx32l003_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>HAL_InitTick</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, cx32l003_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2b]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2e]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, cx32l003_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[30]"></a>HAL_PCA_IRQHandler</STRONG> (Thumb, 404 bytes, Stack size 8 bytes, cx32l003_hal_pca.o(i.HAL_PCA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_PCA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OverflowCallback
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OutputCompareCallback
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_InputCaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_IRQHandler
</UL>

<P><STRONG><a name="[32]"></a>HAL_PCA_InputCaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_hal_pca.o(i.HAL_PCA_InputCaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_IRQHandler
</UL>

<P><STRONG><a name="[34]"></a>HAL_PCA_OC_ConfigChannel</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, cx32l003_hal_pca.o(i.HAL_PCA_OC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_PCA_OC_ConfigChannel &rArr; PCA_OC4_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_OC4_SetConfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_OC3_SetConfig
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_OC2_SetConfig
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_OC1_SetConfig
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_OC0_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>HAL_PCA_OC_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, cx32l003_hal_pca.o(i.HAL_PCA_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_PCA_OC_Init &rArr; HAL_PCA_OC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_Base_SetConfig
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>HAL_PCA_OC_MspInit</STRONG> (Thumb, 80 bytes, Stack size 64 bytes, main.o(i.HAL_PCA_OC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_PCA_OC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_Init
</UL>

<P><STRONG><a name="[52]"></a>HAL_PCA_OC_Start</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, cx32l003_hal_pca.o(i.HAL_PCA_OC_Start))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>HAL_PCA_OutputCompareCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_hal_pca.o(i.HAL_PCA_OutputCompareCallback))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_IRQHandler
</UL>

<P><STRONG><a name="[33]"></a>HAL_PCA_OverflowCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_hal_pca.o(i.HAL_PCA_OverflowCallback))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 446 bytes, Stack size 16 bytes, cx32l003_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[43]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cx32l003_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLKFreq
</UL>

<P><STRONG><a name="[42]"></a>HAL_RCC_GetPCLKFreq</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, cx32l003_hal_rcc.o(i.HAL_RCC_GetPCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetPCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_UART_SetConfig
</UL>

<P><STRONG><a name="[41]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, cx32l003_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[44]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1152 bytes, Stack size 16 bytes, cx32l003_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_OscConfig &rArr; RCC_Delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Delay
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2d]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, cx32l003_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[46]"></a>HAL_UART_Transmit</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, cx32l003_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialSend
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cx32l003_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.I2C_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>IWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.IWDG_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LPTIM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.LPTIM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LPUART_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.LPUART_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.LVD_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>LogInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, log.o(i.LogInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = LogInit &rArr; SerialInit &rArr; Log_UART_SetConfig &rArr; HAL_RCC_GetPCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>OWIRE_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.OWIRE_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PCA_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cx32l003_it.o(i.PCA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PCA_IRQHandler &rArr; HAL_PCA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SPI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.SPI_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, cx32l003_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SystemClock_Config</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, system_cx32l003.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(.text)
</UL>
<P><STRONG><a name="[10]"></a>TIM10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.TIM10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM11_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.TIM11_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.TIM1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>UART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.UART0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>VC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.VC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cx32l003_it.o(i.WWDG_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cx32l003.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>__0printf$2</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf2.o(i.__0printf$2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5e]"></a>__1printf$2</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf2.o(i.__0printf$2), UNUSED)

<P><STRONG><a name="[51]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf2.o(i.__0printf$2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[60]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[61]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[22]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, log.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = fputc &rArr; SerialSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf2.o(i.__0printf$2)
</UL>
<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_Start
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_ConfigChannel
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[45]"></a>RCC_Delay</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, cx32l003_hal_rcc.o(i.RCC_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_Delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[2f]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, cx32l003_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[47]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, cx32l003_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[3c]"></a>PCA_Base_SetConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cx32l003_hal_pca.o(i.PCA_Base_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_Init
</UL>

<P><STRONG><a name="[35]"></a>PCA_OC0_SetConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cx32l003_hal_pca.o(i.PCA_OC0_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCA_OC0_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_ConfigChannel
</UL>

<P><STRONG><a name="[36]"></a>PCA_OC1_SetConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cx32l003_hal_pca.o(i.PCA_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCA_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_ConfigChannel
</UL>

<P><STRONG><a name="[37]"></a>PCA_OC2_SetConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cx32l003_hal_pca.o(i.PCA_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCA_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_ConfigChannel
</UL>

<P><STRONG><a name="[38]"></a>PCA_OC3_SetConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cx32l003_hal_pca.o(i.PCA_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCA_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_ConfigChannel
</UL>

<P><STRONG><a name="[39]"></a>PCA_OC4_SetConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cx32l003_hal_pca.o(i.PCA_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCA_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCA_OC_ConfigChannel
</UL>

<P><STRONG><a name="[4a]"></a>Log_UART_SetConfig</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, log.o(i.Log_UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Log_UART_SetConfig &rArr; HAL_RCC_GetPCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLKFreq
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialInit
</UL>

<P><STRONG><a name="[49]"></a>SerialInit</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, log.o(i.SerialInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SerialInit &rArr; Log_UART_SetConfig &rArr; HAL_RCC_GetPCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogInit
</UL>

<P><STRONG><a name="[4b]"></a>SerialSend</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, log.o(i.SerialSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SerialSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[50]"></a>_printf_core</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, printf2.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$2
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
